#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# INITIALIZE AND STORE SETTINGS
#=================================================
ynh_script_progression --message="Initializing and storing installation settings..." --weight=1

setup_dex

ynh_app_setting_set_default --key=utils_secret --value="$(ynh_string_random --length=32 --filter='A-F0-9')"
ynh_app_setting_set_default --key=secret_key   --value="$(ynh_string_random --length=32 --filter='A-F0-9')"

#=================================================
# CREATE A POSTGRESQL DATABASE
#=================================================
ynh_script_progression --message="Creating a PostgreSQL database..." --weight=1

ynh_psql_execute_as_root --sql="CREATE EXTENSION IF NOT EXISTS unaccent;" --database=$db_name
ynh_psql_execute_as_root --sql="CREATE EXTENSION IF NOT EXISTS pg_trgm;" --database=$db_name

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=2

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir"

chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# SETUP LOCAL STORAGE
#=================================================

mkdir "/var/lib/$app"
chown -R $app:www-data "/var/lib/$app"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

# Create a dedicated systemd config
ynh_add_systemd_config

# Use logrotate to manage application logfile(s)
ynh_use_logrotate

cron_path="/etc/cron.d/$app"
ynh_add_config --template="../conf/outline.cron" --destination="$cron_path"
chown root: "$cron_path"
chmod 644 "$cron_path"

yunohost service add $app --description="Outline server" --log="/var/log/$app/$app.log"

#=================================================
# BUILD YARN DEPENDENCIES
#=================================================
ynh_script_progression --message="Building $app. This can be very long, be patient !" --weight=18

pushd "$install_dir"
	ynh_hide_warnings ynh_exec_as_app corepack enable
	ynh_hide_warnings ynh_exec_as_app corepack prepare yarn@latest --activate
	ynh_hide_warnings ynh_exec_as_app yarn install --frozen-lockfile --network-timeout 1000000000 2>&1
	ynh_hide_warnings ynh_exec_as_app NODE_OPTIONS="--max-old-space-size=3200" yarn build 2>&1
	ynh_hide_warnings ynh_exec_as_app yarn cache clean 2>&1
popd

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression --message="Adding a configuration file..." --weight=1

ynh_add_config --template="../conf/.env" --destination="$install_dir/.env"

chmod 400 "$install_dir/.env"
chown $app:$app "$install_dir/.env"

#=================================================
# RUN DB MIGRATION
#=================================================
ynh_script_progression --message="Running DB initial migration..." --weight=3

pushd "$install_dir"
	ynh_hide_warnings ynh_exec_as_app yarn db:migrate
popd

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=1

# Start a systemd service
ynh_systemd_action --service_name=$app --action="start" --log_path="systemd"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
