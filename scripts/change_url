#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# RETRIEVE ARGUMENTS
#=================================================

old_domain=$YNH_APP_OLD_DOMAIN
old_path=$YNH_APP_OLD_PATH

new_domain=$YNH_APP_NEW_DOMAIN
new_path=$YNH_APP_NEW_PATH

app=$YNH_APP_INSTANCE_NAME

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading installation settings..." --time --weight=1

# Needed for helper "ynh_add_nginx_config"
final_path=$(ynh_app_setting_get --app=$app --key=final_path)
domain=$(ynh_app_setting_get --app=$app --key=domain)
path_url=$(ynh_app_setting_get --app=$app --key=path_url)
port=$(ynh_app_setting_get --app=$app --key=port)
db_name=$(ynh_app_setting_get --app=$app --key=db_name)
language_key=$(ynh_app_setting_get --app=$app --key=language_key)
slack_key=$(ynh_app_setting_get --app=$app --key=slack_key)
slack_secret=$(ynh_app_setting_get --app=$app --key=slack_secret)
secret_key=$(ynh_app_setting_get --app=$app --key=secret_key)
utils_secret=$(ynh_app_setting_get --app=$app --key=utils_secret)

minio_domain=$(ynh_app_setting_get --app="minio" --key=domain)

	if [ $minio_domain != "sub.domain.tld" ]; then
		minio_id=$(ynh_app_setting_get --app="minio" --key=minio_id)
		minio_key=$(ynh_app_setting_get --app="minio" --key=minio_key)
		mc_path=$(ynh_app_setting_get --app="minio" --key=mc_path)
	fi

#=================================================
# BACKUP BEFORE CHANGE URL THEN ACTIVE TRAP
#=================================================
ynh_script_progression --message="Backing up the app before changing its URL (may take a while)..." --time --weight=1

# Backup the current version of the app
ynh_backup_before_upgrade
ynh_clean_setup () {
	# Remove the new domain config file, the remove script won't do it as it doesn't know yet its location.
	ynh_secure_remove --file="/etc/nginx/conf.d/$new_domain.d/$app.conf"

	# Restore it if the upgrade fails
	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# CHECK WHICH PARTS SHOULD BE CHANGED
#=================================================

change_domain=0
if [ "$old_domain" != "$new_domain" ]
then
	change_domain=1
fi

change_path=0
if [ "$old_path" != "$new_path" ]
then
	ynh_die "Outline has to be installed on the root of a domain"
fi

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..." --time --weight=1

ynh_systemd_action --service_name=$app --action="stop" --log_path="/var/log/$app/$app.log"

#=================================================
# MODIFY URL IN NGINX CONF
#=================================================
ynh_script_progression --message="Updating NGINX web server configuration..." --time --weight=1

nginx_conf_path=/etc/nginx/conf.d/$old_domain.d/$app.conf

# Change the domain for NGINX
if [ $change_domain -eq 1 ]
then
	# Delete file checksum for the old conf file location
	ynh_delete_file_checksum --file="$nginx_conf_path"
	mv $nginx_conf_path /etc/nginx/conf.d/$new_domain.d/$app.conf
	# Store file checksum for the new config file location
	ynh_store_file_checksum --file="/etc/nginx/conf.d/$new_domain.d/$app.conf"
fi

#=================================================
# UPDATING A CONFIGURATION
#=================================================

domain=$new_domain

ynh_secure_remove --file="$final_path/.env"
ynh_script_progression --message="Updating the configuration file..." --time --weight=1

ynh_add_config --template="../conf/.env" --destination="$final_path/.env"

chmod 400 "$final_path/.env"
chown $app:$app "$final_path/.env"

#=================================================
# RUN DB MIGRATION
#=================================================
ynh_script_progression --message="Running DB initial migration..." --weight=3

pushd "$final_path"
	ynh_use_nodejs
	ynh_exec_warn_less sudo -u $app env $ynh_node_load_PATH yarn db:migrate
popd

#=================================================
# GENERIC FINALISATION
#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --time --weight=1

ynh_systemd_action --service_name=$app --action="start" --log_path="/var/log/$app/$app.log"

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..." --time --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# SLACK WARNING
#=================================================
ynh_print_info --message="Don't forget to add a new redirction url in your Slack app settings !"


#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Change of URL completed for $app" --time --last
