#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression "Ensuring downward compatibility..."

if [ ${#utils_secret} -lt 64 ]; then
	utils_secret=$(ynh_string_random --length=64 --filter='a-f0-9')
	ynh_app_setting_set --key=utils_secret --value="$utils_secret"
fi

if [ ${#secret_key} -lt 64 ]; then
	secret_key=$(ynh_string_random --length=64 --filter='a-f0-9')
	ynh_app_setting_set --key=secret_key --value="$secret_key"
fi

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service=$app --action="stop" --log_path="systemd"

#=================================================
# SETUP DEX FOR OIDC
#=================================================

setup_dex

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Upgrading source files..."

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir" --full_replace

#=======================================================
# MIGRATE MINIO BUCKET IF UPGRADING FROM AN OLD VERSION
#=======================================================
ynh_script_progression "Checking if a migration is needed"

if ynh_app_upgrading_from_version_before_or_equal_to 0.69.2.2~ynh1
then
	ynh_script_progression "Migrating MinIO data to local directory"

	mkdir -p "/var/lib/$app/data"
	chown -R minio:www-data "/var/lib/$app"
	ynh_hide_warnings sudo -u minio $mc_path/mc mirror --preserve "minio/outlinestorage" "/var/lib/$app/data"

	chown -R $app:$app "/var/lib/$app"
	ynh_script_progression "Data migration finished"
	ynh_script_progression "Data bucket was kept for safety, just in case !"
	ynh_script_progression "Don't forget to remove MinIO app if you don't use it !"

	db_name=$(ynh_sanitize_dbid --db_name=$app)
	ynh_psql_db_shell <<< "CREATE EXTENSION IF NOT EXISTS "uuid-ossp";"

else
	ynh_script_progression "No migration to be done"
fi

#=======================================================
# MIGRATE DEFAULT LANGUAGE ENV PARAMETER
#=======================================================

if ynh_app_upgrading_from_version_before_or_equal_to 0.75.0~ynh1
then
	ynh_script_progression "Migrating default language variable"
	if [ "$language" == "fr" ]
	then
		ynh_app_setting_set --key=language --value="fr_FR"
	else
		ynh_app_setting_set --key=language --value="en_US"
	fi
else
	ynh_script_progression "No default language migration to be done"
fi

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression "Upgrading NGINX web server configuration..."

# Create a dedicated NGINX config
ynh_config_add_nginx

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression "Adding $app's configuration..."

ynh_config_add --template=".env" --destination="$install_dir/.env"

#=================================================
# UPGRADE YARN DEPENDENCIES
#=================================================
ynh_script_progression "Building $app. This can be very long, be patient !"

pushd "$install_dir"
	ynh_hide_warnings corepack enable
	ynh_hide_warnings corepack prepare yarn@latest --activate
	ynh_hide_warnings ynh_exec_as_app $nodejs_dir/yarn install --frozen-lockfile --network-timeout 1000000000 2>&1
	ynh_hide_warnings ynh_exec_as_app NODE_OPTIONS="--max-old-space-size=3200" $nodejs_dir/yarn build 2>&1
	ynh_hide_warnings ynh_exec_as_app $nodejs_dir/yarn cache clean
	ynh_hide_warnings ynh_exec_as_app NODE_ENV=production $nodejs_dir/yarn db:migrate
popd

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression "Upgrading systemd configuration..."

# Create a dedicated systemd config
ynh_config_add_systemd

# Use logrotate to manage app-specific logfile(s)
ynh_config_add_logrotate

cron_path="/etc/cron.d/$app"
ynh_config_add --template="outline.cron" --destination="$cron_path"

yunohost service add $app --description="Outline server" --log="/var/log/$app/$app.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service=$app --action="start" --log_path="systemd"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
